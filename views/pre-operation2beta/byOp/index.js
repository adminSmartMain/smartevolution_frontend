import { useEffect, useState } from "react";

import Head from "next/head";

import { useFetch } from "@hooks/useFetch";

import { OperationsComponents } from "./components";
// queries
import { getOperationsVersionTwo } from "./queries";

export default function Operations() {
  const [data, setData] = useState([]);
  const [filteredData, setFilteredData] = useState([]);
  const [filters, setFilters] = useState({
    opId: "",
    billId: "",
    investor: "",
  });

  const [commission, setCommission] = useState(0);
  const [page, setPage] = useState(1);
  const {
    fetch: getOperationsFetch,
    loading: loadingGetOperations,
    error: errorGetOperations,
    data: dataGetOperations,
  } = useFetch({
    service: () => getOperationsVersionTwo({ ...filters, page }),
    init: true,
  });


  let dataCount = dataGetOperations?.count || 0;
  console.log(data)
  console.log(filteredData)
  console.log(dataGetOperations)
  console.log(page)


  const filtersHandlers = {
    value: filters,
    set: setFilters,
    get: getOperationsFetch,
    loading: loadingGetOperations,
    error: errorGetOperations,
    data: dataGetOperations?.results || {},
  };

  useEffect(() => {
    getOperationsFetch();
  }, [filters.opId, filters.billId, filters.investor, page]);

  useEffect(() => {
    if (dataGetOperations) {

      dataCount = dataGetOperations?.count || 0;
      

      setFilteredData(dataGetOperations.results);

      if (dataGetOperations.results?.length == 0) filtersHandlers.data.calcs = {};
    }
    console.log('c')
  }, [dataGetOperations]);

  useEffect(() => {
    if (dataGetOperations) {
     
      console.log(dataGetOperations.results)
      setData(dataGetOperations.results);
    }
    console.log('d')
  }, [dataGetOperations, loadingGetOperations, errorGetOperations]);

  return (
    <>
      <Head>
        <title>Consulta de pre-operaciones</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <OperationsComponents
        rows2={data}
        filtersHandlers={filtersHandlers}
        getOperationsFetch={getOperationsFetch}
        
        loadingGetOperations={loadingGetOperations}
        page={page}
        setPage={setPage}
        dataCount={dataCount}
      />
    </>
  );
}
